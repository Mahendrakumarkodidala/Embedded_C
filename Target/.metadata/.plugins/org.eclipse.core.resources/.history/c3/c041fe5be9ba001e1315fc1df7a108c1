/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "main.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	//1. Enabling the Clock AHB1ENR - 3rd bit
	RCC_AHB1ENR_t volatile *const pClkCtrlReg;
	pClkCtrlReg = (RCC_AHB1ENR_t*)0x40023830;
	pClkCtrlReg->gpiod_en =1;

	//2. Changing the mode of PD12 pin (25,24 bit to 0,1)
	GPIOx_MODE_t volatile *const pGpiodMode;
	pGpiodMode = (GPIOx_MODE_t*)0x40020C00;
	pGpiodMode->mode_r12 = 1;

	while(1)
	{
		GPIOx_ODR_t volatile *const pGpiodOdr;
		pGpiodOdr = (GPIOx_ODR_t*)0x40020C14;
		pGpiodOdr->od_r12 = 1;

		for(uint32_t i = 0; i < 300000; i++);

		pGpiodOdr->od_r12 = 0;

		for(uint32_t i = 0; i < 300000; i++);
	}













    /* Loop forever */
	for(;;);
}
